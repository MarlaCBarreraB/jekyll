#!/usr/bin/env ruby
# frozen_string_literal: true

# Usage: script/memprof <object>
# Counts the number of Jekyll::Document instances if no object has been provided.

require "bundler/setup"
require File.expand_path("../lib/jekyll", __dir__)

def log(topic, message = "")
  Jekyll.logger.info topic, message
end

def count_instances(subject)
  object = Object.const_get(subject, false)
  divider = "-" * 80
  yield
  log ""
  log divider
  log "COUNT:", "#{ObjectSpace.each_object(object).count} instance(s) of #{subject.cyan}"
  log divider
end

GC.disable
count_instances(ARGV[0] || "Jekyll::Document") do
  Jekyll::Commands::Build.process(
    "source"      => File.expand_path("../docs", __dir__),
    "destination" => File.expand_path("../docs/_site", __dir__)
  )
end
GC.start

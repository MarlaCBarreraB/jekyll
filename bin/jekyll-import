#!/usr/bin/env ruby
$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

require 'optparse'
require 'jekyll'

opts = OptionParser.new do |opts|
  opts.on("--file [PATH]", "File to import from") do |import_file|
    options['file'] = import_file
  end

  opts.on("--dbname [TEXT]", "DB to import from") do |import_dbname|
    options['dbname'] = import_dbname
  end

  opts.on("--user [TEXT]", "Username to use when importing") do |import_user|
    options['user'] = import_user
  end

  opts.on("--pass [TEXT]", "Password to use when importing") do |import_pass|
    options['pass'] = import_pass
  end

  opts.on("--host [HOST ADDRESS]", "Host to import from") do |import_host|
    options['host'] = import_host
  end

  opts.on("--site [SITE NAME]", "Site to import from") do |import_site|
    options['site'] = import_site
  end
end

# Read command line options into `options` hash
opts.parse!

# Import using the appropriate migrator
migrator = ARGV[1]

if migrator.nil?
  puts "Invalid options. Run `jekyll --help` for assistance."
  exit(1)
else
  migrator = migrator.downcase
end

cmd_options = []
['file', 'dbname', 'user', 'pass', 'host', 'site'].each do |p|
  cmd_options << "\"#{options[p]}\"" unless options[p].nil?
end

# It's import time
puts "Importing..."
    
# Ideally, this shouldn't be necessary. Maybe parse the actual
# src files for the migrator name?
migrators = {
  :posterous => 'Posterous',
  :wordpressdotcom => 'WordpressDotCom',
  :wordpress => 'WordPress',
  :csv => 'CSV',
  :drupal => 'Drupal',
  :enki => 'Enki',
  :mephisto => 'Mephisto',
  :mt => 'MT',
  :textpattern => 'TextPattern',
  :tumblr => 'Tumblr',
  :typo => 'Typo'
}
    
app_root = File.join(File.dirname(__FILE__), '..')
    
require "#{app_root}/lib/jekyll/migrators/#{migrator}"
    
if Jekyll.const_defined?(migrators[migrator.to_sym])
  migrator_class = Jekyll.const_get(migrators[migrator.to_sym])
  migrator_class.process(*cmd_options)
else
  puts "Invalid migrator. Run `jekyll --help` for assistance."
  exit(1)
end

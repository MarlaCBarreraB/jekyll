# Deprecations definitions file (definitions.yml)
#
# Basically, the deprecations definitions file declares which deprecations must be processed to each type and subtype.
#
# This file structure contains types, subtypes and a array of deprecation items as the value of the subtypes, where each array item is a deprecation definition. Example:
#
# ```yaml
# # Please take attention through the indentation of the properties in each item of the array.
# config:
#   removed:
#     -
#       key: 'key'
#       msg: "message"
#     -
#       key: 'other_key'
#       msg: "message2"
#   renamed:
#     -
#       key: 'key'
#       msg: "another anoying message"
#       other_prop: "this is another property info"
# ```
#
# Each item has many properties that can be setted, according to the deprecation type and subtype. These properties must be readed by each Deprecation subclass of its type and subtype.
#
# Deprecation properties
#
# The main class ```Deprecation``` has only two properties:
#  - ```key```: The key of the given deprecation, this is used just as an identifier for the deprecation. It can be used again for some validation in ```DeprecationSubclass.process```
#  - ```msg```: The message to be shown in logs for this deprecation. By default, you can place the placeholder ```:key``` inside this string, and it will be replaced by the key property.
#
# All the properties names (keys of the hash) will be symbolized, so access them as symbols in the properties hash
#
# Each subclass can have many other properties, and they are received in the subclass through the hash parameter in ```initialize```. Example:
#
# - definitions.yml
#   ```yaml
#     # old code
#     my_type:
#       my_subtype:
#         -
#           key: Luke
#           msg: ":key, I'm your father"
#           type_prop: Kinship
#           subtype_prop: Paternity
#   ```
#
# - type.rb (class)
#   ```ruby
#     module Jekyll
#       module Deprecations
#         class MyType < Deprecation
#           attr_accessor type
#
#           # in the properties param you will receive all the properties of the hash
#           def initialize(properties = {})
#             super(properties)
#             type = properties[:type_prop]
#           end
#
#           class MySubtype < MyType
#             attr_accessor subtype
#
#             # you know
#             def initialize(properties = {})
#               super(properties)
#               subtype = properties[:subtype_prop]
#             end
#           end
#         end
#       end
#     end
#   ```
command:
  no_subcommand:
    -
      key: 'no-subcommand'
      msg: "Jekyll now uses subcommands instead of just switches. Run `jekyll help' to find out more."
  default:
    -
      key: '--server'
      msg: The :key command has been replaced by the 'serve' subcommand.
    -
      key: '--no-server'
      msg: "To build Jekyll without launching a server, use the 'build' subcommand."
    -
      key: '--auto'
      msg: "The switch ':key' has been replaced with '--watch'."
    -
      key: '--no-auto'
      msg: "To disable auto-replication, simply leave off the '--watch' switch."
    -
      key: '--pygments'
      msg: "The 'pygments' setting can only be set in your config files."
    -
      key: '--paginate'
      msg: "The 'paginate' setting can only be set in your config files."
    -
      key: '--url'
      msg: "The 'url' setting can only be set in your config files."
config:
  removed:
    -
      key: 'auto'
      msg: "Auto-regeneration can no longer be set from your configuration file(s). Use the --watch/-w command-line option instead."
    -
      key: 'watch'
      msg: "Auto-regeneration can no longer be set from your configuration file(s). Use the --watch/-w command-line option instead."
    -
      key: 'server'
      msg: "The ':key' configuration option is no longer accepted. Use the 'jekyll serve' subcommand to serve your site with WEBrick."
  renamed:
    -
      key: 'server_port'
      msg: "The ':key' configuration option has been renamed to ':new_key'. Please update your config file accordingly."
      new_key: 'port'
  type_changed:
    -
      key: 'include'
      msg: "The ':key' configuration option must now be specified as an array, but you specified a string. For now, we've treated the string you provided as a list of comma-separated values."
      old_type: String
      new_type: Array
    -
      key: 'exclude'
      msg: "The ':key' configuration option must now be specified as an array, but you specified a string. For now, we've treated the string you provided as a list of comma-separated values."
      old_type: String
      new_type: Array

